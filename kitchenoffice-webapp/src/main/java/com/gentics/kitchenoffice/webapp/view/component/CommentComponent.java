package com.gentics.kitchenoffice.webapp.view.component;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

public class CommentComponent extends CustomComponent {

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout contentLayout;
	@AutoGenerated
	private Label commentLabel;
	@AutoGenerated
	private Label whoWrote;
	@AutoGenerated
	private Embedded embedded_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CommentComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// embedded_1
		embedded_1 = new Embedded();
		embedded_1.setImmediate(false);
		embedded_1.setWidth("50px");
		embedded_1.setHeight("50px");
		embedded_1.setSource(new ThemeResource(
				"img/component/embedded_icon.png"));
		embedded_1.setType(1);
		embedded_1.setMimeType("image/png");
		mainLayout.addComponent(embedded_1);
		
		// contentLayout
		contentLayout = buildContentLayout();
		mainLayout.addComponent(contentLayout);
		mainLayout.setExpandRatio(contentLayout, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildContentLayout() {
		// common part: create layout
		contentLayout = new VerticalLayout();
		contentLayout.setImmediate(false);
		contentLayout.setWidth("100.0%");
		contentLayout.setHeight("100.0%");
		contentLayout.setMargin(false);
		
		// whoWrote
		whoWrote = new Label();
		whoWrote.setImmediate(false);
		whoWrote.setWidth("-1px");
		whoWrote.setHeight("-1px");
		whoWrote.setValue("who wrote");
		contentLayout.addComponent(whoWrote);
		
		// commentLabel
		commentLabel = new Label();
		commentLabel.setImmediate(false);
		commentLabel.setWidth("-1px");
		commentLabel.setHeight("-1px");
		commentLabel.setValue("comment content");
		contentLayout.addComponent(commentLabel);
		
		return contentLayout;
	}

}
